name: Publish nuget

on:
  push:
    branches: [main] # run deployment on push to main branch
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      project: metro-base.fsharp.qc 
      PROJECT_FOLDER: ./
      PROJECT_FILE: metro-base.fsproj
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: "8.0.x" # .NET SDK version to use.

    # github.run_number is a number of the pipeline run. It is increased automatically.
    # That's why we can use it to increase the version of the nuget package.
    # Here we replace the last number in the version with github.run_number.
    - name: Set version
      run: |
       echo "Buid version is ${{github.run_number}}"
       sed -i "s/\(<Version>\([0-9]\+\.\)\{2\}\)\([0-9]\+\)/\1${{github.run_number}}/" ${{env.PROJECT_FILE}}       

    - name: Build
      working-directory: ${{env.PROJECT_FOLDER}}
      run: dotnet build --configuration Release ${{env.PROJECT_FILE}} 

    - name: Pack
      working-directory: ${{env.PROJECT_FOLDER}}
      run: dotnet pack --configuration Release --no-build --output . ${{env.PROJECT_FILE}} 

    # Here we use external public config file to publish nuget package.
    # The script needs to know the path to the csproj file and the nuget API key.
    - name: Publish nuget package
      working-directory: ${{env.PROJECT_FOLDER}}
      run: dotnet nuget push *.nupkg -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json --no-symbols --skip-duplicate